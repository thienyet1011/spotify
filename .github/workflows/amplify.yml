name: Deploy app to AWS Amplify
on:
  pull_request:  
    types: 
      - closed
    branches: 
      - main
  push:
    branches: 
      - main

# permissions: 
#   contents: read
  # id-token: write

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: Production
    env: # Env variables needed during build
      NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.NEXT_PUBLIC_SUPABASE_URL }}
      NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.NEXT_PUBLIC_SUPABASE_ANON_KEY }}
      NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_GTM_ID: ${{ secrets.NEXT_PUBLIC_GTM_ID }}
      SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
      STRIPE_SECRET_KEY: ${{ secrets.STRIPE_SECRET_KEY }}
      STRIPE_WEBHOOK_SECRET: ${{ secrets.STRIPE_WEBHOOK_SECRET }}
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: |
            npm install -g yarn
            yarn install

      - name: Build
        run: yarn build

      # - name: Setup AWS CLI
      #   run: |
      #     curl "https://d1vvhvl2y92vvt.cloudfront.net/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
      #     unzip awscliv2.zip
      #     sudo ./aws/install

      - name: Install Amplify CLI
        run: npm install -g @aws-amplify/cli

      - name: Config aws credential
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      # - name: Check whether the PROD environment has exists or not?
      #   run: |
      #     echo "Listing existing Amplify environments..."
      #     ENV_NAME="prod"  # Replace with your desired environment name
      #     APP_ID="${{ secrets.AMPLIFY_APP_ID }}"  # Replace with your Amplify App ID
          
      #     # List backend environments and check if the environment exists
      #     EXISTING_ENV=$(aws amplify list-backend-environments --app-id $APP_ID --query "backendEnvironmentList[?environmentName=='$ENV_NAME'].environmentName" --output text)

      #     if [ "$EXISTING_ENV" == "$ENV_NAME" ]; then
      #       echo "Environment '$ENV_NAME' already exists. Skipping creation."
      #     else
      #       echo "Environment '$ENV_NAME' does not exist. Creating environment..."
            
      #       # Add logic to create the environment or push the backend if needed
      #       amplify env add --name $ENV_NAME
      #       amplify push
      #     fi

      - name: Deploy to Amplify
        run: |
          amplify pull --appId ${{ secrets.AMPLIFY_APP_ID }} --envName prod -y
          amplify push --envName $ENV_NAME -y
        env:
          AMPLIFY_CLI_HEADLESS: true

    
